/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Bitacora.Registro;
import Controlador.Manejador_productos;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author usuario
 */
public class Barras_grafica extends javax.swing.JFrame {
    private Manejador_productos listado = null;
    final int ALTO_RECTANGULO = 400;
    private Registro bitacora = new Registro();

    /**
     * Creates new form Graficas
     */
    public Barras_grafica(Manejador_productos productos) {
        this.setName("Barras");
        bitacora.Escribir(this.getName(), "Se inicio con productos a modelar");
        initComponents();
        this.setLocationRelativeTo(null);
        listado = productos;
    }
    
    public Barras_grafica(){
        this.setName("Barras");
        bitacora.Escribir(this.getName(), "Sin productos - esta mal");
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    boolean pintar_grafica = true;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        B_votaciones = new javax.swing.JButton();
        B_refrescar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Grafica de Barras");

        jLabel1.setText("Votaciones al momento");

        B_votaciones.setText("Cerrar");
        B_votaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_votacionesActionPerformed(evt);
            }
        });

        B_refrescar.setText("Refrescar");
        B_refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_refrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel1)
                .addContainerGap(187, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(B_votaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(B_refrescar)
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_votaciones)
                    .addComponent(B_refrescar))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_votacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_votacionesActionPerformed
        dispose();
        bitacora.Escribir(this.getName(), "Se suspende y deja de ser visible");
    }//GEN-LAST:event_B_votacionesActionPerformed

    private void B_refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_refrescarActionPerformed
        repaint();
        bitacora.Escribir(this.getName(), "Se actualizo");
    }//GEN-LAST:event_B_refrescarActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_refrescar;
    private javax.swing.JButton B_votaciones;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
    public int El_mayor(int valor_rojo, int valor_verde, int valor_azul){
        if(valor_rojo > valor_verde && valor_rojo > valor_azul){
        return valor_rojo;
        } else if (valor_verde > valor_azul){
            return valor_verde;
        }else{
            return valor_azul;
        }
    }
    
    public void paint(Graphics g){
        super.paint(g);
        if(pintar_grafica){
            bitacora.Escribir(this.getName(), "Se grafican los datos");
            String rojo = listado.Producto_1().getNombre();
            String verde = listado.Producto_2().getNombre();
            String azul = listado.Producto_3().getNombre();
            
            int num_rojo = listado.Producto_1().getVotos();
            int num_verde = listado.Producto_2().getVotos();
            int num_azul = listado.Producto_3().getVotos();
            
            int mayor = El_mayor(num_rojo,num_verde,num_azul);
            
            int barra_rojo = num_rojo * ALTO_RECTANGULO / mayor;
            int barra_verde = num_verde * ALTO_RECTANGULO / mayor;
            int barra_azul = num_azul * ALTO_RECTANGULO / mayor;
            
            g.setColor(new Color(255,0,0));
            g.fillRect(100, 100, barra_rojo, 40);
            g.drawString(listado.Producto_1().getNombre(),10,125);
            
            g.setColor(new Color(0,130,0));
            g.fillRect(100, 150, barra_verde, 40);
            g.drawString(listado.Producto_2().getNombre(),10,175);
            
            g.setColor(new Color(0,0,200));
            g.fillRect(100, 200, barra_azul, 40);
            g.drawString(listado.Producto_3().getNombre(),10,225);
            
        }
        
    }
    
    public void Repaint(){
        this.repaint();
    }

}
